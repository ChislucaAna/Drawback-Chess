@using DrawbackChess.Classes
@using DrawbackChess.Components.Pages;
@using DrawbackChess.Classes.GameClasses;
@using DrawbackChess.Classes.DatabaseClasses

<div class="chessboard">

    @for (int row = 1; row <= 8; row++)
    {

        @for (int col = 1; col <= 8; col++)
        {
            var square = board.grid[row, col];

            <div class="square @(square.IsBlackSquare() ? "black" : "white")">
                @if (square.piece !=null)
                {
                    <img src="\images\@(square.piece.color.ToLower())_@(square.piece.type.ToLower()).png"
                    alt="@square.piece.type"
                    class="piece @(square.piece.color.ToLower() == "white" ? "rotated" : "")" />
                }
            </div>
        }
    }

</div>

@code {

    public static Action RefreshStaticChessboard;
    protected override void OnInitialized()
    {
        //Console.WriteLine("FEN:" + FEN);
        board = Board.FromFEN(FEN);
        RefreshStaticChessboard = async () => await InvokeAsync(StateHasChanged);
    }

    public static void refresh_page(Board b)
    {
        board = b;
    }

    [Parameter] public string FEN { get; set; }
    public static Board board ;
}
