@page "/game"
<head>
    <link href="css/Board.css" rel="stylesheet" />
</head>
<body>
    <div class="chessboard">
        @for (int row = 1; row <= 8; row++)
        {
            @for (int col = 1; col <= 8; col++)
            {
                var square = board.grid[row, col];
                var isHighlighted = PossibleMoves.Contains(square); // Check if the square is a possible move

                <div class="square @(square.IsBlackSquare() ? "black" : "white") 
                @(square == StartSquare ? "selected" : "")
                @(isHighlighted ? "highlight" : "")"
                @onclick="() => OnSquareClick(square)">
                    @if (square.piece != null)
                    {
                        <img src="\images\@(square.piece.color.ToLower())_@(square.piece.type.ToLower()).png"
                        alt="@square.piece.type"
                        class="piece" />
                    }
                </div>
            }
        }
    </div>
</body>

@code {
    Board board;
    Square? StartSquare; //only one piece can be moved at a time. This is the starting square of that piece
    Square? EndSquare;
    HashSet<Square> PossibleMoves { get; set; } = new(); //posible moves of potentially selected piece

    protected override void OnInitialized()
    {
        board = new Board();
        board.SetupPieces();
        board.PrintCurrentState();
    }

    private void OnSquareClick(Square clicked)
    {
        if (StartSquare == clicked) //Deselect Piece
        {   
            StartSquare = null;
            PossibleMoves.Clear();
        }
        else
        {
            if (StartSquare == null) //Select Piece
                if (clicked.piece != null)
                { 
                    StartSquare = clicked;
                    PossibleMoves = StartSquare.piece.GetPossibleMoves(StartSquare,board);
                }
            else //A piece has already been Selected. try to move it.
            {    
                //if (PossibleMoves.Contains(clicked))
                    //board.MovePiece(StartSquare, clicked);

                StartSquare = null;
                PossibleMoves.Clear();
            }
        }
        StateHasChanged();
    }
}

