@page "/game"
<head>
    <link href="css/Board.css" rel="stylesheet" />
</head>
<body>
    <div class="chessboard">
        @for (int row = 1; row <= 8; row++)
        {
            @for (int col = 1; col <= 8; col++)
            {
                var square = board.grid[row, col];
                var isHighlighted = board.PossibleMoves.Contains(square); // Check if the square is a possible move

                <div class="square @(square.IsBlackSquare() ? "black" : "white") 
                @(square == board.StartSquare ? "selected" : "")
                @(isHighlighted ? "highlight" : "")"
                @onclick="() => OnSquareClick(square)">
                    @if (square.piece != null)
                    {
                        <img src="\images\@(square.piece.color.ToLower())_@(square.piece.type.ToLower()).png"
                        alt="@square.piece.type"
                        class="piece" />
                    }
                </div>
            }
        }
    </div>
</body>

@code {

    Board board;

    protected override void OnInitialized()
    {
        board = new Board();
        board.SetupPieces();
        board.PrintCurrentState();
    }

    private void OnSquareClick(Square clicked)
    {
        if (board.StartSquare == clicked)   
        {
            board.DeselectPiece();
        }
        else
        {
            if (board.StartSquare == null) 
            {
                board.TrySelectPieceOn(clicked);
            }
            else //A piece has already been Selected. try to move it.
            {    
                if (board.PossibleMoves.Contains(clicked))
                {
                   board.EndSquare = clicked;
                   board.MovePiece();
                }
            }
        }
        StateHasChanged();
    }
}

