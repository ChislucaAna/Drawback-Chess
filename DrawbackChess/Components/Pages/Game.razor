@page "/game/{Player1Name}/{Player2Name}/{PlayTime:int}"
<link href="css/Board.css" rel="stylesheet" />
<div class="content">
    <div class="gamearea">
            <div class="session_info">
        <p>Player: @current_session.player1.name</p>
        <p>Time Left: @current_session.player1.TimeLeft</p>
    </div>

    <div class="chessboard">
        @for (int row = 1; row <= 8; row++)
        {
            @for (int col = 1; col <= 8; col++)
            {
                var square = current_session.board.grid[row, col];
                var isHighlighted = current_session.board.PossibleMoves.Contains(square); // Check if the square is a possible move

                <div class="square @(square.IsBlackSquare() ? "black" : "white") 
                @(square == current_session.board.StartSquare ? "selected" : "")
                @(isHighlighted ? "highlight" : "")"
                @onclick="() => OnSquareClick(square)">
                    @if (square.piece != null)
                    {
                        <img src="\images\@(square.piece.color.ToLower())_@(square.piece.type.ToLower()).png"
                        alt="@square.piece.type"
                        class="piece" />
                    }
                </div>
            }
        }
    </div>

    <div class="session_info">
        <p>Player: @current_session.player2.name</p>
        <p>Player: @current_session.player2.TimeLeft</p>
    </div>
    </div>
</div>

@code {
    [Parameter] public string Player1Name { get; set; }
    [Parameter] public string Player2Name { get; set; }
    [Parameter] public int PlayTime { get; set; }
    public Session current_session;

    protected override void OnInitialized()
    {
        if (Home.is_new_game)
        {
            TimeSpan timeSpan = TimeSpan.FromMinutes(PlayTime);
            current_session = new Session(Player1Name,Player2Name, timeSpan);
        }
    }

    private void OnSquareClick(Square clicked)
    {
        if (current_session.board.StartSquare == clicked)   
        {
            current_session.board.DeselectPiece();
        }
        else
        {
            if (current_session.board.StartSquare == null) 
            {
                current_session.board.TrySelectPieceOn(clicked);
            }
            else //A piece has already been Selected. try to move it.
            {
                current_session.board.Try_Execute_Move(clicked);
                current_session.board.PrintMoveHistory();
            }
        }
        StateHasChanged();
    }
}


