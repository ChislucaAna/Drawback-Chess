@page "/gameOnline"
@using DrawbackChess.Classes
@using DrawbackChess.Components
@using DrawbackChess.Components.IndividualComponents
@using CommunityToolkit.Maui.Views;
<link href="css/Game.css" rel="stylesheet" />
<div class="content">

    <GameEndedPopup Title="Game Over" IsVisible="@GameMenu.currentGame.GameHasEnded()">
        @if (GameMenu.currentGame.typeofwin != "draw")  //someone won
        {
            @if(@GameMenu.currentGame.winner.color == GameMenu.session.getMyColor()) //if i won make it green
            {
                <p class="message green">
                    Game won!
                </p>
            }
            else //esle red
            {
                <p class="message red">
                    Game lost!
                </p>
            }
        }
        else
        {
            <p class="message">
                Game over! The game ended in a draw.
            </p>
        }
    </GameEndedPopup>

    <div class="gamearea">
        @if (GameMenu.session.getMyColor() == "Black") //oposite player up
        {
            <PlayerInfo GameHasStarted="@GameMenu.currentGame.GameHasStarted()" player="@GameMenu.currentGame.player1"
                        timer="@GameMenu.currentGame.WhiteTimer" rotate="roteste()">
            </PlayerInfo>
        }
        else
        {
            <PlayerInfo GameHasStarted="@GameMenu.currentGame.GameHasStarted()" player="@GameMenu.currentGame.player2"
                        timer="@GameMenu.currentGame.BlackTimer" rotate="false">
            </PlayerInfo>
        }

        <ChessBoardOnline></ChessBoardOnline>

        @if (GameMenu.session.getMyColor()=="Black") //im down always
        {
            <PlayerInfo GameHasStarted="@GameMenu.currentGame.GameHasStarted()" player="@GameMenu.currentGame.player2"
            timer="@GameMenu.currentGame.BlackTimer" rotate="false">
            </PlayerInfo>
        }
        else
        {
            <PlayerInfo GameHasStarted="@GameMenu.currentGame.GameHasStarted()" player="@GameMenu.currentGame.player1"
                        timer="@GameMenu.currentGame.WhiteTimer" rotate="roteste()">
            </PlayerInfo>
        }
    </div>
</div>

@code
{
    protected override void OnInitialized()
    {
        Action refreshUI = async () => await InvokeAsync(StateHasChanged);
        GameMenu.currentGame.refreshUI = refreshUI;
    }

    public bool roteste() //pe offline nu se roteste, pe online da
    {
        if (GameMenu.session == null)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
}