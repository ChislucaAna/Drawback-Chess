@code {
    [Parameter] public RenderFragment? ChildContent { get; set; }
    [Parameter] public EventCallback OnClose { get; set; }
    [Parameter] public string Title { get; set; } = "Popup";
    [Parameter] public bool IsVisible { get; set; } = false;

    private void ClosePopup()
    {
        if (OnClose.HasDelegate)
        {
            OnClose.InvokeAsync();
        }
    }
}

@if (IsVisible)
{
    <div class="popup-overlay">
        <div class="popup-container">
            <div class="popup-header">
                <h2>@Title</h2>
                <button class="popup-close-btn" @onclick="ClosePopup">X</button>
            </div>
            <div class="popup-body">
                @ChildContent
            </div>
        </div>
    </div>
}

<style>
    .popup-overlay {
        position:absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.5);
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .popup-container {
        background-color: #F8F8FF;
        border-radius: 10px;
        padding: 20px;
        width: 90%;
        max-width: 400px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }

    .popup-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .popup-close-btn {
        background: transparent;
        border: none;
        font-size: 1.5em;
        cursor: pointer;
    }

    .popup-body {
        margin-top: 15px;
    }

    h2
    {
        color: #5632D5;
    }

    .message
    {
         color:#0D0924;
    }
</style>